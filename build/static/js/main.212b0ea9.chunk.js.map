{"version":3,"sources":["Components/Layout/Header.js","Context/UserContext.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/TextInputValidation.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","Navbar","bg","expand","variant","className","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Item","Link","style","color","marginTop","marginRight","people","name","email","phone","reducer","state","action","type","console","log","payload","filter","contact","StateContext","createContext","StateProvider","children","useReducer","dispatch","Provider","value","Contact","useState","show","setShow","context","useContext","Card","Body","cursor","onClick","fontSize","float","ListGroup","Contacts","FormLabel","map","p","key","TextInputValidation","content","onChange","Label","error","Form","Control","size","placeholder","isInvalid","Feedback","TextInputGroup","FormGroup","controlId","AddContact","errorStatus","changedText","errors","event","length","checkIfFielsEmpty","currentTarget","Button","block","values","newContact","uuid","submitForm","about","App","Container","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.212b0ea9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { FaHome } from \"react-icons/fa\";\nimport { MdAdd } from \"react-icons/md\";\nimport { FaQuestion } from \"react-icons/fa\";\n\nconst Header = ({ title }) => {\n  return (\n    <Navbar bg=\"danger\" expand=\"sm\" variant=\"dark\" className=\"mb-3 py-0\">\n      <Navbar.Brand href=\"/\">{title}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" />\n      <Nav className=\"mr-auto \"></Nav>\n      <Nav.Item>\n        <Nav.Link style={{ color: \"#FFF\" }} href=\"/\">\n          <FaHome style={{ marginTop: \"-4\", marginRight: \"2\" }}></FaHome>\n          Home\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link style={{ color: \"#FFF\" }} href=\"/contact/add\">\n          <MdAdd style={{ marginTop: \"-4\", marginRight: \"2\" }}></MdAdd>\n          Add\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link style={{ color: \"#FFF\" }} href=\"/about\">\n          <FaQuestion\n            style={{ marginTop: \"-4\", marginRight: \"2\" }}\n          ></FaQuestion>\n          About\n        </Nav.Link>\n      </Nav.Item>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { useReducer, createContext } from \"react\";\n\nconst people = [\n  {\n    id: 1,\n    name: \"Giuseppe Di Lisa\",\n    email: \"gdilisa@hotmail.com\",\n    phone: \"14885\"\n  },\n\n  {\n    id: 2,\n    name: \"Sarah Fenton\",\n    email: \"sarah@hotmail.com\",\n    phone: \"4751411\"\n  },\n\n  {\n    id: 3,\n    name: \"Bob Marley\",\n    email: \"bob@hotmail.com\",\n    phone: \"1242\"\n  }\n];\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      console.log(`Delete in UserContext this id:${action.payload}`);\n      console.log(state);\n\n      return {\n        ...state,\n        people: state.people.filter(contact => contact.id !== action.payload)\n      };\n\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        people: [action.payload, ...state.people]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const StateContext = createContext();\nexport const StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, { people });\n  console.log(state.people);\n\n  return (\n    <StateContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { MdRemoveCircleOutline } from \"react-icons/md\";\nimport { StateContext } from \"../../Context/UserContext\";\n\nconst Contact = ({ contact }) => {\n  const [show, setShow] = useState();\n\n  const showDetail = () => {\n    show ? setShow(false) : setShow(true);\n  };\n\n  const context = useContext(StateContext);\n\n  const deleteContact = id => {\n    console.log(`Delete this id:${id}`);\n    context.dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  return (\n    <Card>\n      <Card.Body className=\"mb-3\">\n        <h4>\n          {contact.name}\n          <FaAngleDown\n            style={{ cursor: \"pointer\" }}\n            onClick={() => showDetail()}\n          />\n          <MdRemoveCircleOutline\n            onClick={() => deleteContact(contact.id)}\n            style={{\n              fontSize: 30,\n              color: \"red\",\n              float: \"right\",\n              cursor: \"pointer\"\n            }}\n          />\n        </h4>\n        {show ? (\n          <ListGroup>\n            <ListGroup.Item>\n              <div>email: {contact.email}</div>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <div>Phone: {contact.phone}</div>\n            </ListGroup.Item>\n          </ListGroup>\n        ) : null}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Contact;\n","import React, { useContext, Fragment } from \"react\";\nimport Contact from \"../Contacts/Contact\";\nimport { StateContext } from \"../../Context/UserContext\";\nimport { FormLabel } from \"react-bootstrap\";\n\nconst Contacts = () => {\n  const { state } = useContext(StateContext);\n  console.log(`From Contacts:${state.people}`);\n\n  return (\n    <Fragment>\n      <FormLabel className={\"display-4 mb-2\"}>\n        <span className={\"text-danger\"}>Contact </span>\n        <FormLabel>List</FormLabel>\n      </FormLabel>\n\n      {state.people.map(p => (\n        <Contact key={p.id} contact={p} />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\n\nimport { Form } from \"react-bootstrap\";\n\nconst TextInputValidation = ({ content, type, onChange, Label, error }) => {\n  return (\n    <>\n      <Form.Control\n        size=\"lg\"\n        type={type}\n        name={Label}\n        placeholder={`Enter ${Label}`}\n        value={content}\n        onChange={value => onChange(value)}\n        isInvalid={error}\n      ></Form.Control>\n      <Form.Control.Feedback type={\"invalid\"}>\n        {Label} is required\n      </Form.Control.Feedback>\n    </>\n  );\n};\n\nexport default TextInputValidation;\n","import React from \"react\";\nimport { FormGroup, Form } from \"react-bootstrap\";\nimport TextInputValidation from \"./TextInputValidation\";\n//import PropTypes from \"prop-types\";\n\nconst TextInputGroup = ({ content, type, onChange, Label, error }) => {\n  return (\n    <FormGroup controlId={\"formBasicEmail\"}>\n      <Form.Label name={Label}>{Label}</Form.Label>\n      <TextInputValidation\n        content={content}\n        type={type}\n        onChange={onChange}\n        Label={Label}\n        error={error}\n      ></TextInputValidation>\n    </FormGroup>\n  );\n};\n\nexport default TextInputGroup;\n","import React, { useContext, useReducer } from \"react\";\nimport { Card, FormGroup, Button } from \"react-bootstrap\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport { StateContext } from \"../../Context/UserContext\";\nimport uuid from \"uuid\";\n\nconst AddContact = () => {\n  const context = useContext(StateContext);\n\n  const initialState = {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: { name: null, email: null, phone: null }\n  };\n\n  const reducer = (state, action) => {\n    //console.log(value.target.name);\n\n    switch (action.type) {\n      case \"Name\":\n        console.log(action.payload.errorStatus);\n\n        return {\n          ...state,\n          name: action.payload.changedText,\n          errors: { name: action.payload.errorStatus }\n        };\n      case \"Email\":\n        return {\n          ...state,\n          email: action.payload.changedText,\n          errors: { email: action.payload.errorStatus }\n        };\n      case \"Phone\":\n        return {\n          ...state,\n          phone: action.payload.changedText,\n          errors: { phone: action.payload.errorStatus }\n        };\n      default:\n        break;\n    }\n  };\n\n  const checkIfFielsEmpty = state => {\n    return state.length < 1 ? true : false;\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onChange = event => {\n    const state = checkIfFielsEmpty(event.currentTarget.value);\n    console.log(state);\n\n    console.log(event.currentTarget);\n\n    dispatch({\n      type: event.currentTarget.name,\n      payload: { changedText: event.currentTarget.value, errorStatus: state }\n    });\n  };\n\n  const submitForm = values => {\n    console.log(\"VALUES:\");\n    console.log(values);\n\n    const { name, email, phone } = values;\n\n    if (name === \"\") {\n      dispatch({\n        type: \"Name\",\n        payload: { changedText: \"\", errorStatus: true }\n      });\n      return;\n    }\n    if (email === \"\") {\n      dispatch({\n        type: \"Email\",\n        payload: { changedText: \"\", errorStatus: true }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      dispatch({\n        type: \"Phone\",\n        payload: { changedText: \"\", errorStatus: true }\n      });\n      return;\n    } else {\n      const newContact = {\n        id: uuid(),\n        name: values.name,\n        email: values.email,\n        phone: values.phone\n      };\n      console.log(\"ADD CONTACTS\");\n      context.dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n    }\n  };\n\n  console.log(\"INIT_______INIT\");\n  console.log(state.name, state.email, state.phone);\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Header>Add Contact</Card.Header>\n      <Card.Body>\n        <FormGroup>\n          <TextInputGroup\n            content={state.name}\n            type={\"text\"}\n            Label={\"Name\"}\n            onChange={onChange}\n            error={state.errors.name}\n          ></TextInputGroup>\n          <TextInputGroup\n            content={state.email}\n            type={\"email\"}\n            Label={\"Email\"}\n            onChange={onChange}\n            error={state.errors.email}\n          ></TextInputGroup>\n          <TextInputGroup\n            content={state.phone}\n            type={\"text\"}\n            Label={\"Phone\"}\n            onChange={onChange}\n            error={state.errors.phone}\n          ></TextInputGroup>\n          <Button\n            variant=\"light\"\n            block={true}\n            type=\"submit\"\n            onClick={() => submitForm(state)}\n            value=\"Add Contact\"\n          >\n            Add Contact\n          </Button>\n        </FormGroup>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\n\nconst about = () => {\n  return <h1>About Contact Manager</h1>;\n};\n\nexport default about;\n","import React from \"react\";\nimport Header from \"./Components/Layout/Header\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\n\nimport { StateProvider } from \"../src/Context/UserContext\";\nimport AddContact from \"./Components/Contacts/AddContact\";\nimport About from \"./Components/pages/About\";\n\nfunction App() {\n  return (\n    <StateProvider>\n      <Router>\n        <div className=\"App\">\n          <Header title=\"Contact Manager\"></Header>\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route exact path=\"/About\" component={About}></Route>\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}